{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/keyboard-list/filter.pipe.ts","./src/app/keyboard-list/keyboard-list.component.ts","./src/app/keyboard-list/keyboard-list.component.html","./src/app/keyboard-list/keyboard-list.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'keyboard-browser';\n}\n","<app-keyboard-list style=\"width: 50%\"></app-keyboard-list>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { KeyboardListModule } from './keyboard-list/keyboard-list.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, KeyboardListModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLowerCase();\n    return items.filter((it) => {\n      return it.toLowerCase().includes(searchText);\n    });\n  }\n}\n","import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { MatSelectionListChange } from '@angular/material/list';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-keyboard-list',\n  templateUrl: './keyboard-list.component.html',\n  styleUrls: ['./keyboard-list.component.scss'],\n})\nexport class KeyboardListComponent implements OnInit {\n  keyboards: string[];\n  keyboard: string;\n  keyboardJson = '';\n  keyboardFilter = '';\n\n  keymaps: string[];\n  keymap: string[] = [];\n  keymapJson = '';\n  keymapFilter = '';\n  constructor(private ngZone: NgZone) {}\n  @ViewChild('autosize1') autosize1: CdkTextareaAutosize;\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  triggerResize1(): void {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this.ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize1.resizeToFitContent(true));\n  }\n  triggerResize(): void {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this.ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n  ngOnInit(): void {\n    console.log('helloWorld');\n    fetch(\n      'https://raw.githubusercontent.com/qmk-helper/qmk-database/master/keyboards.txt'\n    )\n      .then((response) => response.text())\n      .then((keyboards) => {\n        this.keyboards = keyboards.split('\\n');\n        console.log(this.keyboards);\n      });\n  }\n\n  selectKeyboard(event: MatSelectionListChange): void {\n    this.keyboard = event.option.value;\n    this.keyboardJson = '';\n\n    this.keymaps = [];\n    this.keymap = [''];\n    this.keymapJson = '';\n    fetch(\n      `https://raw.githubusercontent.com/qmk-helper/qmk-database/master/keymaps/${this.keyboard}/keymaps.txt`\n    )\n      .then((response) => response.text())\n      .then((keymaps) => {\n        this.keymaps = keymaps.split(' ');\n        console.log(this.keymaps);\n      });\n\n    fetch(\n      `https://raw.githubusercontent.com/qmk/qmk_firmware/master/keyboards/${this.keyboard}/info.json`\n    )\n      .then((response) => response.text())\n      .then((keyboardJson) => {\n        this.keyboardJson = keyboardJson;\n        console.log(this.keyboardJson);\n        this.triggerResize1();\n      });\n  }\n  selectKeymap(event: MatSelectionListChange): void {\n    this.keymap = event.option.value;\n    fetch(\n      `https://raw.githubusercontent.com/qmk-helper/qmk-database/master/keymaps/${this.keyboard}/${this.keymap[0]}.keymap.json`\n    )\n      .then((response) => response.text())\n      .then((keymapJson) => {\n        this.keymapJson = keymapJson;\n        console.log(this.keymapJson);\n        this.triggerResize();\n      });\n  }\n}\n","<!-- <p *ngFor=\"let keyboard of keyboards\">{{ keyboard }}</p> -->\n<div class=\"container-fluid\">\n  <h1>Keyboard Browser</h1>\n  <div class=\"row\">\n    <div class=\"col-xs-3\">\n      <mat-form-field style=\"width: 90%\">\n        <input\n          matInput\n          [(ngModel)]=\"keyboardFilter\"\n          placeholder=\"Search Keyboards\"\n        />\n      </mat-form-field>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"scrollable-viewport\">\n        <mat-selection-list\n          #keyboardListItem\n          [multiple]=\"false\"\n          (selectionChange)=\"selectKeyboard($event)\"\n        >\n          <mat-list-option\n            *cdkVirtualFor=\"let keyboard of keyboards | filter: keyboardFilter\"\n            [value]=\"keyboard\"\n          >\n            {{ keyboard }}\n          </mat-list-option>\n        </mat-selection-list>\n      </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"col-xs-3\">\n      <mat-form-field style=\"width: 90%\">\n        <input\n          matInput\n          [(ngModel)]=\"keymapFilter\"\n          placeholder=\"Search Keymaps\"\n        />\n      </mat-form-field>\n\n      <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"scrollable-viewport\">\n        <mat-selection-list\n          #keymapListItem\n          [multiple]=\"false\"\n          (selectionChange)=\"selectKeymap($event)\"\n        >\n          <mat-list-option\n            *ngFor=\"let keymap of keymaps | filter: keymapFilter\"\n            [value]=\"keymap.split(':')\"\n          >\n            {{ keymap.split(\":\")[0] }}\n          </mat-list-option>\n        </mat-selection-list>\n      </cdk-virtual-scroll-viewport>\n    </div>\n    <div class=\"col-xs-6\">\n      <h2>Keyboard: {{ keyboard }}</h2>\n      <div class=\"row\" style=\"height: 40vh; overflow-y: auto\">\n        <div class=\"col-xs-12\">\n          <div>\n            <mat-form-field style=\"width: 90%\">\n              <textarea\n                matInput\n                cdkTextareaAutosize\n                #autosize1=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"1\"\n                placeholder=\"Keyboard JSON\"\n                >{{ keyboardJson }} </textarea\n              >\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n      <h2>Keymap: {{ keymap[0] }}</h2>\n      <div class=\"row\" style=\"height: 40vh; overflow-y: auto\">\n        <div class=\"col-xs-12\">\n          <div>\n            <mat-form-field style=\"width: 90%\">\n              <textarea\n                matInput\n                cdkTextareaAutosize\n                #autosize=\"cdkTextareaAutosize\"\n                cdkAutosizeMinRows=\"1\"\n                placeholder=\"Keymap JSON\"\n                >{{ keymapJson }} </textarea\n              >\n            </mat-form-field>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FilterPipe } from './filter.pipe';\nimport { KeyboardListComponent } from './keyboard-list.component';\n@NgModule({\n  declarations: [KeyboardListComponent, FilterPipe],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatListModule,\n    MatInputModule,\n    ScrollingModule,\n  ],\n  exports: [KeyboardListComponent],\n})\nexport class KeyboardListModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}